apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

build.doLast {

    //测试自定义task, 观察编译log里面是否有输出
    helloTask.execute()

    //导出R的Jar包
    exportJar.execute()

}

task exportJar(type: Jar) {
    //指定生成的jar名
    baseName 'rClasses'
    from buildDir.absolutePath + '/intermediates/classes/debug/'
    include '**/R.class'
    include '**/R$*.class'
    //打包到jar后的目录结构
    //into("com/xxx/xxx")
    destinationDir = file(buildDir.absolutePath + '/outputs/')
}


// 自定义task的用法
task helloTask(type: HelloGradleTask) {
    helloStr = 'hello from ovrride greeting ' + android.sourceSets.main.manifest.srcFile
}
// 自定义task的用法
class HelloGradleTask extends DefaultTask {

    def String helloStr = 'hello from Default HelloGradleTask '

    @TaskAction
    def hello() {
        println helloStr
    }
}
